enum Foo =
    | Bar
    | Baz(number, string)

let du = Foo.Baz(4,"f")

export skill Pretty<T> {
    prettify(x: T): string
}

train Pretty<number> {
    prettify(x: number) = "NUMBER: " + x
}

train Pretty<string> {
    prettify(x: string) = "STRING: " + x
}

let f = (s: Pretty<T>, x: T) => "Prettified is " + s.prettify(x)

let foo = f(5) // The skill argument is implicitly injected by the compile
let bar = f("zas")

// Single line comment

/*
Multi line comment
Second line is ignore too
*/

/****
Multi line comment
It's also works if we use several *
***/

/** **
Multi line comment
It's also works if we include spaces between *
** */

let a =
    1
    * (2 + 1)
    * -5

let b =
    (x: number, y: Foo<A<R>>) =>
        x + y

let c = true
let d = false
let e = null